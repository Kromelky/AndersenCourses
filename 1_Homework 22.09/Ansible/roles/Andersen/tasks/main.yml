---
- name: Install Ssh key to Host  
  authorized_key:
    user: "{{ansible_ssh_user}}"
    state: present
    manage_dir: yes
    key: "{{lookup('file','~/.ssh/{{ssh_key}}.pub')}}"

- name: Install Ssh key to root user Host  
  authorized_key:
    user: root
    state: present
    manage_dir: yes
    key: "{{lookup('file','~/.ssh/{{ssh_key}}.pub')}}"

- name: Push default key
  authorized_key:
    user: '{{ ansible_ssh_user }}'
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    state: present
    manage_dir: True
  ignore_errors: yes


- name: Add specified repository
  copy:
    src: sources.list
    dest: /etc/apt/sources.list
    mode: u+rw,g+r,o-rwx


- name: InstallIng Git and VirtualEnv
  apt: 
    pkg: 
      - git
      - virtualenv   
      - python3-pip 
      - python3-venv  
      - libssl-dev
      - libffi-dev
      - build-essential
    state: latest
    install_recommends: yes    

- name: Change to python3
  lineinfile:
    path: '~/.bashrc'
    regexp: '^alias python='
    line: 'alias python="/usr/bin/python3.9"'

- name: Creating Project Folder
  file: 
    path: "{{ source_folder }}"
    mode: 0755
    state: directory

- import_tasks: pippackages.yml 

- name: Clone Repo
  git:
    repo: 'https://{{ gitlab_username | urlencode }}:{{ gitlab_password | urlencode }}@github.com/Kromelky/FlaskApplication.git'
    clone: yes
    dest: '{{source_folder}}/service'
    force: yes

- import_tasks: ssl.yml
  when: use_ssl == 'True'

- name: Make run file
  copy:
    content: |
      #! /bin/sh
      {{ venv }}/bin/python {{ source_folder }}/service/main.py -p {{ app_port }} -ssl {{ use_ssl }}
    dest: '{{ source_folder }}/service/run.sh'
  
- name: Make service file
  template:
    src: awesomezoo.j2
    dest: '{{source_folder}}/service/awesomezoo.service'
  notify:
    - Restart Rest service

- name: Add executable
  file:
    path: '{{source_folder}}'
    mode: 0775
    group: '{{ ansible_ssh_user }}'
    recurse: yes

- name: Create symbolic link 
  file:
    src: '{{source_folder}}/service/awesomezoo.service'
    dest: "/etc/systemd/system/awesomezoo.service"
    state: link
  notify: 
    - Reload daemons
    - Restart Rest service

- name: Enable Rest service
  service: 
    name: awesomezoo
    enabled: yes
    state: restarted

- name: Modify host for subdoman
  lineinfile:
    insertafter : '^127\.0\.0\.1\s+localhost$'
    path: /etc/hosts
    line: '{{ ansible_host }} {{ ansible_nodename }}.localhost'    

- import_tasks: iptables.yml 

- name: Enable PubkeyAuthentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PubkeyAuthentication*'
    line: 'PubkeyAuthentication yes'
  notify: restart ssh

- name: Disable chalange auth
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^ChallengeResponseAuthentication '
    line: 'ChallengeResponseAuthentication no'
  notify: restart ssh

- name: Disable password auth
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication '
    line: 'PasswordAuthentication no'
  notify: restart ssh

- name: Disable UsePAM 
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^UsePAM '
    line: 'UsePAM no'
  notify: restart ssh

- name: Disable root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin '
    line: 'PermitRootLogin no'
  notify: restart ssh






  


        
